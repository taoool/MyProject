"""
一、定义函数获取列表页的内容页地址 get_movie_links()
1、定义列表的地址  https://www.ygdy8.net/html/gndy/dyzz/index.html
2、打开url地址，获取数据
3、解码获取到的数据
4、使用正则得到所有的影片内容页地址

二、主函数 main

"""

import urllib.request
import re
import time
import threading

class Spider(object):

    def __init__(self):
        self.i = 1
        self.films_dict = {}
        self.lock1 = threading.Lock()

    def start(self):

        for page in range(2, 4):
            # 调用下载函数，获取下载地址
            t1 = threading.Thread(target=self.get_movie_link, args=(page, ))
            t1.start()

        # 得到字典对应的数组
        films_dict = self.films_dict.items()

        # 所有线程执行完毕后再退出
        while len(threading.enumerate()) != 1:
            time.sleep(1)

        # 遍历下载字典，获取影片名称、下载地址
        for film_name, film_url in films_dict:
            print(film_name, "|" , film_url)


    def get_movie_link(self, page):
        """获取列表页影片信息"""
        # 设置要下载的列表的地址
        film_list_url = "https://www.ygdy8.net/html/gndy/dyzz/list_23_%d.html" % page

        # 2、打开url地址，获取数据,并解码得到网页html文本内容
        response_list = urllib.request.urlopen(film_list_url)
        # 2.1、通过read()读取网络资源数据
        response_list_data = response_list.read()
        # 3、解码获取到的数据
        response_list_text = response_list_data.decode("GBK")
        # 4、使用正则得到所有的影片内容页地址
        # 4.1使用findall() 根据正则查找所有影片对应的内容页地址
        # 4.2、保存地址
        url_list = re.findall("<a href=\"(.*)\" class=\"ulink\">(.*)</a>", response_list_text)
        # print(url_list)
        # 定义一个字典，用于保存影片信息
        # 4.3、循环遍历 url_list
        for film_link, film_name in url_list:
            # 拼接内容页地址
            film_link = "https://www.ygdy8.net" + film_link
            # 4.4、打开内容页地址，接收内容页数据
            film_content = urllib.request.urlopen(film_link)
            # 4.5、读取网络资源
            film_content_data = film_content.read()
            # 4.6、解码得到内容页的文本内容
            film_content_text = film_content_data.decode("GBK")
            # 4.8取出下载地址
            film_contect_link = re.search("bgcolor=\"#fdfddf\"><a href=\"(.*)\">", film_content_text)
            if film_contect_link:
                # 字典
                # {"xxx影片": "xxx地址"}
                self.lock1.acquire()
                self.films_dict[film_name] = film_contect_link.group(1)
                self.lock1.release()
                print("已经成功爬取%d个影片地址!" % (self.i))
                self.i += 1
            else:
                continue


def main():

    film_spider = Spider()
    film_spider.start()


if __name__ == '__main__':

    main()
